import java.io.BufferedReader
import java.io.BufferedWriter
import java.io.InputStreamReader
import java.io.OutputStreamWriter

fun main() {

    val br = BufferedReader(InputStreamReader(System.`in`))
    val bw = BufferedWriter(OutputStreamWriter(System.out))

    val size = br.readLine().toInt()
    val a = br.readLine().split(" ").map { it.toInt() }

    val arr = mutableListOf<Int>()

    for (num in a) {

        if (arr.isEmpty() || num > arr.last()) {
            arr.add(num)
        } else {

            val index = binarySearch(arr, num)
            arr[index] = num
        }

    }

    bw.write("${arr.size}\n")
    bw.flush()
    bw.close()
}


fun binarySearch(list: List<Int>, key: Int): Int {

    var start = 0
    var end = list.size

    while (start < end) {
        val mid = (start + end) / 2
        if (list[mid] < key) {
            start = mid + 1
        } else {
            end = mid
        }
    }

    return start

}
